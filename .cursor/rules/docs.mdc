---
description: 'Guidelines for writing accurate, well-structured documentation'
globs: ['**/docs/**/*.md', '**/README.md', '**/*.mdc']
alwaysApply: false
---

# Documentation Writing Rules

## Core Principle: Source Code First

**NEVER use guesswork or assumptions when writing documentation.**

### Mandatory Process

1. **Read the Source Code**: Always read and understand the actual implementation before writing any documentation
2. **Verify Examples**: All code examples must be based on real, working code from the codebase
3. **Check API Usage**: Verify method signatures, parameter types, and return values from the actual source
4. **Test Assumptions**: If unsure about any behavior, examine the code rather than guessing

### What to Read

- **Main API functions**: Understand how they work internally
- **Type definitions**: Get accurate parameter and return types
- **Example files**: Use patterns from existing examples in the codebase
- **Plugin implementations**: Understand actual plugin architecture
- **Test files**: See real usage patterns and edge cases

### Prohibited Practices

- ❌ Writing documentation based on common framework patterns
- ❌ Assuming API behavior without checking source code
- ❌ Copying examples from similar frameworks
- ❌ Guessing method signatures or parameter types
- ❌ Making up configuration options that don't exist

### Required Practices

- ✅ Read the actual source code before writing
- ✅ Base all examples on real code from the repository
- ✅ Verify all API calls against the implementation
- ✅ Check type definitions for accuracy
- ✅ Test examples against the actual codebase

### When in Doubt

- Read more source code
- Look for existing examples in the codebase
- Check test files for usage patterns
- Never guess - always verify

## Writing Style Guidelines

### Clear Structure Over Bold Text

**Write documents that convey importance through structure, not formatting.**

### Mandatory Practices

- ✅ Use heading hierarchy (h1, h2, h3) to show importance and organization
- ✅ Write complete, flowing sentences instead of bullet-pointed fragments
- ✅ Let content organization and natural language convey emphasis
- ✅ Use section structure to guide readers through logical progression

### Prohibited Practices

- ❌ Using bold text (**text**) to emphasize importance
- ❌ Relying on formatting instead of clear writing to convey meaning
- ❌ Creating bullet lists where prose would be more natural
- ❌ Bold text in navigation links and call-to-action elements

### Writing Approach

- Use descriptive subheadings instead of bold keywords
- Write cohesive paragraphs that flow naturally
- Let the information hierarchy speak for itself
- Make important points clear through placement and context, not bold formatting

### Exception

Bold text may be used sparingly for:

- ✅ True emphasis within technical explanations (very rare)
- ✅ Highlighting critical warnings or errors

## Remember

Documentation that contains incorrect information is worse than no documentation at all. Accuracy is paramount.

Quality documentation guides readers through natural flow and clear structure, not visual emphasis.
